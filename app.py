#  ##load all the environment variables

import os
import sqlite3

import google.generativeai as genai
import streamlit as st

##configure our API Key

genai.configure(api_key='AIzaSyBsLPD2jJlCLTwaxeRlBnW03Oov3SAWS0k')

#Function to load google gemini model and provide query as response
#prompt is how we want our google gemini pro to behave, and question is what we ask

def get_gemini_response(question,prompt):
    model=genai.GenerativeModel('gemini-pro')
    response=model.generate_content([prompt[0],question])
    return response.text
##Function to retrieve query  from SQL DB
#sql is the sql query generated by the llm model
def read_sql_query(sql,db):
    conn=sqlite3.connect(db) #first connect to db
    cur=conn.cursor()      #then create cursor object
    cur.execute(sql)
    rows=cur.fetchall()
    conn.commit()
    conn.close()
    for row in rows:
        print(row)
    return rows

##define your prompt

prompt=[
    """You are an expert in converting English questions to SQL query
The SQL Database has the name student and has the following columns - name,class,section \n\nFor example,\nExample1-How many entries of records are present?,the SQL command will be something like this
SELECT COUNT(*) FROM STUDENT;
\nExample2 - Tell me all the students studying in CS class?,
the SQL command will be something like this SELECT* FROM STUDENT WHERE CLASS="CS";
also the sql code should not have ''' in the beginning ot end and sql word in the output
"""
]
st.set_page_config(page_title="Retrieve any SQL Query")
st.header('NL2SQL App')
question=st.text_input("Input: ",key="input")
submit=st.button("Ask")

if submit:
    response=get_gemini_response(question,prompt)
    print(response)
    data=read_sql_query(response,'students.db')
    st.subheader("The response is")
    for row in data:
        st.write(row)
        




    

